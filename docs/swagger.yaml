basePath: /api/v1
definitions:
  endpoint.CreateProfileRequest:
    properties:
      bio:
        type: string
      display_name:
        type: string
      user_id:
        type: integer
    required:
    - bio
    - display_name
    - user_id
    type: object
  endpoint.CredentialsAuthData:
    properties:
      access_token:
        type: string
    type: object
  endpoint.CredentialsAuthRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  endpoint.CredentialsAuthResponse:
    properties:
      data:
        $ref: '#/definitions/endpoint.CredentialsAuthData'
      message:
        type: string
      status_code:
        type: integer
    type: object
  endpoint.MeResponse:
    properties:
      data:
        $ref: '#/definitions/entity.UserProfile'
      message:
        type: string
      status_code:
        type: integer
    type: object
  endpoint.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  endpoint.Response:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
  entity.UserProfile:
    properties:
      bio:
        maxLength: 32
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      display_name:
        maxLength: 16
        minLength: 4
        type: string
      guilds_quantity:
        type: integer
      id:
        type: integer
      messages_quantity:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    required:
    - bio
    - created_at
    - display_name
    - id
    - updated_at
    - user_id
    type: object
host: localhost:3000
info:
  contact:
    email: gustavodiasa2121@gmail.com
    name: Gustavo Dias
    url: https://github.com/charmingruby
  description: This is a Discord like API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Telephony
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates an user
      parameters:
      - description: Credentials Payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/endpoint.CredentialsAuthRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/endpoint.CredentialsAuthResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/endpoint.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/endpoint.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/endpoint.Response'
      summary: Authenticates an user
      tags:
      - Users
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a New user
      parameters:
      - description: Create User Payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/endpoint.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/endpoint.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/endpoint.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/endpoint.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/endpoint.Response'
      summary: Create user
      tags:
      - Users
  /me:
    get:
      consumes:
      - application/json
      description: Get authenticated user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.MeResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/endpoint.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/endpoint.Response'
      summary: Get authenticated user profile
      tags:
      - Profiles
  /me/profile:
    post:
      consumes:
      - application/json
      description: Create an user profile
      parameters:
      - description: Create Profile Payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/endpoint.CreateProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/endpoint.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/endpoint.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/endpoint.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/endpoint.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/endpoint.Response'
      summary: Create an user profile
      tags:
      - Profiles
  /welcome:
    get:
      description: Health Check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.Response'
      summary: Welcome
      tags:
      - Health
securityDefinitions:
  ApiKeyAuth:
    description: Ensures the user is authorized
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
